Examples('the return function',
  Examples('returns from outer function when called from nested block',
    Example('with a given value as function result',
      Given(Unindent(`
        function please_return() {
          [1,2,3].map |$x| { if $x == 1 { return(100) } 200 }
          300
        }
        please_return()`)),
      Evaluates_to(100)),

    Example('with undef value as function result when not given an argument',
      Given(Unindent(`
        function please_return() {
          [1,2,3].map |$x| { if $x == 1 { return() } 200 }
          300
        }
        please_return()`)),
      Evaluates_to(undef)),

  ),

  Example('can be called without parentheses around the argument',
    Given(Unindent(`
      function please_return() {
        if 1 == 1 { return 100 }
        200
      }
      please_return()`)),
    Evaluates_to(100)),

  Example('can be called when nested in a function to make that function return',
    Given(Unindent(`
      function nested_return() {
        with(1) |$x| { with($x) |$x| {return(100) }}
      }
      nested_return()`)),
    Evaluates_to(100)),

  Example('can not be called nested from top scope',
    Given(`with(1) |$x| { with($x) |$x| {return(100) }}`),
    Evaluates_with(Error(EVAL_ILLEGAL_RETURN))),

  Example('can not be called from top scope',
    Given(`return()`),
    Evaluates_with(Error(EVAL_ILLEGAL_RETURN))),
)
