Examples('the sprintf function',
  Example('should raise an ArgumentError if there is less than 1 argument',
    Given(`sprintf()`),
    Evaluates_with(Error(/expects at least 1 argument, got none/))),

  Example('should format integers',
    Given(`sprintf('%+05d', 23)`),
    Evaluates_to(`+0023`)),

  Example('should format floats',
    Given(`sprintf('%+.2f', 2.7182818284590451)`),
    Evaluates_to(`+2.72`)),

  Example('should format large floats',
    Given(`sprintf('%+.2e', 27182818284590451)`),
    Evaluates_to(`+2.72e+16`)),

  Example('should perform more complex formatting',
    Given(`sprintf('<%.8s:%#5o %#8X (%-8s)>', 'overlongstring', 23, 48879, 'foo')`),
    Evaluates_to(`<overlong:  027   0XBEEF (foo     )>`)),

  Example('support named arguments in a hash with string keys',
    Given(`sprintf('%<foo>d : %<bar>f', 'foo' => 1, 'bar' => 2)`),
    Evaluates_to(`1 : 2.000000`)),

  Example('raises a key error if a key is not present',
    Given(`sprintf('%<foo>d : %<zanzibar>f', 'foo' => 1, 'bar' => 2)`),
    Evaluates_with(Error(EVAL_ILLEGAL_ARGUMENT, /key<zanzibar> not found/))),

  Example('a hash with string keys that is output formats as strings',
    Given(`sprintf('%s', 'foo' => 1, 'bar' => 2)`),
    Evaluates_to(`{'foo' => 1, 'bar' => 2}`)),

  Example('named arguments hash with non string keys are tolerated',
    Given(`sprintf('%<foo>d : %<bar>f', {'foo' => 1, 'bar' => 2, 1 => 2, false => true, undef => {}})`),
    Evaluates_to(`1 : 2.000000`)),

  Example('given flags are ignored (output verbatim) when using format with curly braces',
    Given(`sprintf('%{foo}d : %{bar}f', {'foo' => 1, 'bar' => 2})`),
    Evaluates_to(`1d : 2f`)),
)
