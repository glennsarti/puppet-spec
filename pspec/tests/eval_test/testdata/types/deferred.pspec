Examples('Deferred type',
  Example('can reference a function',
    Given(@(SRC)),
      call(Deferred(split, ['a:b:c', ':']))
      |-SRC
    Evaluates_to([a,b,c])),

  Example('can reference a variable',
    Given(@(SRC)),
      $hi = 'hello'
      call(Deferred('$hi'))
      |-SRC
    Evaluates_to('hello')),

  Example('can dig into a variable',
    Given(@(SRC)),
      $hi = { 'h' => 'hello' }
      call(Deferred('$hi', ['h']))
      |-SRC
    Evaluates_to('hello')),

  Example('resolves recursively',
    Given(@(SRC)),
      call(Deferred('split', [Deferred('dig', [Deferred(split, ['a,b:k,l:x,y', ':']), 1]), ',']))
      |-SRC
    Evaluates_to(['k', 'l'])),
)
