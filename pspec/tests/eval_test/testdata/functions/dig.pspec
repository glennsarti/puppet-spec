Examples('The dig function',
  Example('returns a value from an array index via integer index',
    Given(`[testing].dig(0)`),
    Evaluates_to(`testing`)),

  Example('returns undef if given an undef key',
    Given(`[testing].dig(undef)`),
    Evaluates_to(undef)),

  Example('returns undef if starting with undef',
    Given(`undef.dig(undef)`),
    Evaluates_to(undef)),

  Example('returns a value from an hash key via given key',
    Given(`{key => testing}.dig(key)`),
    Evaluates_to(`testing`)),

  Example('continues digging if result is an array',
    Given(`[nope, [testing]].dig(1, 0)`),
    Evaluates_to(`testing`)),

  Example('continues digging if result is a hash',
    Given(`[nope, {yes => testing}].dig(1, yes)`),
    Evaluates_to(`testing`)),

  Example('stops digging when step is undef',
    Given(`[nope, {yes => testing}].dig(1, no, 2)`),
    Evaluates_to(undef)),

  Example('errors if step is neither Array nor Hash',
    Given(`[nope, {yes => testing}].dig(1, yes, 2)`),
    Evaluates_with(Error(EVAL_NOT_COLLECTION_AT))),

  Example('errors if not given a non Collection as the starting point',
    Given(`"hello".dig(1, yes, 2)`),
    Evaluates_with(Error(PCORE_ILLEGAL_ARGUMENTS))),
)
